{{- if .Values.spegel.containerdMirrorAdd }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "spegel.fullname" . }}-cleanup
  namespace: {{ include "spegel.namespace" . }}
  labels:
    app.kubernetes.io/component: cleanup
  annotations:
    helm.sh/hook: "post-delete"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: cleanup
      {{- include "spegel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: cleanup
        {{- include "spegel.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      priorityClassName: {{ .Values.priorityClassName }}
      containers:
      - name: cleanup
        image: "{{ include "spegel.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - cleanup
          - --containerd-registry-config-path={{ .Values.spegel.containerdRegistryConfigPath }}
          - --addr=:{{ .Values.service.cleanup.port }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: readiness
        ports:
          - name: readiness
            containerPort: {{ .Values.service.cleanup.port }}
            protocol: TCP
        volumeMounts:
          - name: containerd-config
            mountPath: {{ .Values.spegel.containerdRegistryConfigPath }}
      volumes:
        - name: containerd-config
          hostPath:
            path: {{ .Values.spegel.containerdRegistryConfigPath }}
            type: DirectoryOrCreate
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "spegel.fullname" . }}-cleanup
  namespace: {{ include "spegel.namespace" . }}
  labels:
    app.kubernetes.io/component: cleanup
  annotations:
    helm.sh/hook: "post-delete"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
    {{- with .Values.service.cleanup.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    app.kubernetes.io/component: cleanup
    {{- include "spegel.selectorLabels" . | nindent 4 }}
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: readiness
      port: {{ .Values.service.cleanup.port }}
      protocol: TCP
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "spegel.fullname" . }}-cleanup-wait
  namespace: {{ include "spegel.namespace" . }}
  labels:
    app.kubernetes.io/component: cleanup-wait
  annotations:
    helm.sh/hook: "post-delete"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "1"
spec:
  containers:
    - name: cleanup-wait
      image: "{{ include "spegel.image" . }}"
      imagePullPolicy: {{ .Values.image.pullPolicy }}
      args:
        - cleanup-wait
        - --probe-endpoint={{ include "spegel.fullname" . }}-cleanup.{{ include "spegel.namespace" . }}.svc.{{ .Values.clusterDomain }}:{{ .Values.service.cleanup.port }}
  restartPolicy: Never
  terminationGracePeriodSeconds: 0
{{- end }}
